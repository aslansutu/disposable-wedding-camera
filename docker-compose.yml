services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.${STAGE}
      args:
        VITE_API_URL: ${API_URL}
    environment:
      - VITE_API_URL=${API_URL}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-proxy"
      - "traefik.http.routers.disposable-camera.rule=Host(`${DOMAIN}`) && PathPrefix(`/`)"
      - "traefik.http.routers.disposable-camera.entrypoints=websecure"
      - "traefik.http.routers.disposable-camera.tls=true"
      - "traefik.http.routers.disposable-camera.tls.certresolver=production"
      - "traefik.http.services.disposable-camera.loadbalancer.server.port=80"
    networks:
      - "traefik-proxy"

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.${STAGE}
    ports:
      - "8000:8000"
    volumes:
      - ./server:/app
      - ./server/uploads:/app/uploads
    environment:
      - ENVIRONMENT=development
      - CLIENT_URL=${CLIENT_URL}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-proxy"
      - "traefik.http.routers.disposable-camera-backend.rule=Host(`api.${DOMAIN}`) && PathPrefix(`/`)"
      - "traefik.http.routers.disposable-camera-backend.entrypoints=websecure"
      - "traefik.http.routers.disposable-camera-backend.tls=true"
      - "traefik.http.routers.disposable-camera-backend.tls.certresolver=production" # May want to try staging before production as production has a rate limit
      - "traefik.http.services.disposable-camera-backend.loadbalancer.server.port=8000"
    networks:
      - "traefik-proxy"

networks:
  traefik-proxy:
    external: true
